[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "TopoModelX"
dynamic = ["version"]
authors = [
    {name = "PyT-Team Authors", email = "mustafahajij@gmail.com"}
]
readme = "README.md"
description = "Topological Deep Learning"
license = {file = "LICENSE.txt"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
requires-python = ">= 3.10"
dependencies=[
    "tqdm",
    "numpy<2",
    "scipy",
    "requests",
    "scikit-learn",
    "matplotlib",
    "networkx",
    "gudhi",
    "pandas",
    "pyg-nightly",
    "toponetx @ git+https://github.com/pyt-team/TopoNetX.git",
]

[project.optional-dependencies]
doc = [
    "hypernetx",
    "jupyter",
    "nbsphinx",
    "nbsphinx_link",
    "numpydoc",
    "sphinx",
    "sphinx_gallery",
    "pydata-sphinx-theme"
]
lint = [
    "pre-commit",
    "ruff"
]
test = [
    "pytest",
    "pytest-cov",
    "coverage",
    "jupyter",
    "mypy",
    "pytest-xdist",
    "pytest-split"
]

dev = ["TopoModelX[test, lint]"]
all = ["TopoModelX[dev, doc]"]

[project.urls]
documentation = "https://pyt-team.github.io/TopoModelX"  
source = "https://github.com/pyt-team/TopoModelX"  
issues = "https://github.com/pyt-team/TopoModelX/issues"  

[tool.ruff]
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F", # pyflakes errors
    "E", # code style
    "W", # warnings
    "I", # import order
    "UP", # pyupgrade rules
    "B", # bugbear rules
    "PIE", # pie rules
    "Q", # quote rules
    "RET", # return rules
    "SIM", # code simplifications
    "NPY", # numpy rules
    "PERF", # performance rules
    "RUF", # miscellaneous rules
]
ignore = ["E501"] # line too long

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403"]

[tool.setuptools.dynamic]
version = {attr = "topomodelx.__version__"}

[tool.setuptools.packages.find]
include = [
    "topomodelx",
    "topomodelx.*"
]

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
disable_error_code = ["import-untyped"]
plugins = "numpy.typing.mypy_plugin"

[tool.pytest.ini_options]
addopts = "--capture=no"

[tool.numpydoc_validation]
checks = [
    "all",
    "GL01",
    "ES01",
    "EX01",
    "SA01"
]
exclude = [
    '\.undocumented_method$',
    '\.__init__$',
]
