name: "Test"

on:
  push:
    branches: [main,github-actions-test]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - 'LICENSE.txt'
    - '.gitignore'

  pull_request:
    branches: [main]
    paths-ignore:
    - 'docs/**'
    - 'README.md'
    - 'LICENSE.txt'
    - '.gitignore'

# Disable debugger's warnings from nbconvert in test_tutorials.py
env:
  PYDEVD_DISABLE_FILE_VALIDATION: 1

jobs:

  pytest:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
        torch-version: [2.0.1]
        include:
          - torch-version: 2.0.1
        test-scope: ["codebase", "tutorials-simplicial", "tutorials-hypergraph", "tutorials-cell-combinatorial"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install PyTorch ${{ matrix.torch-version }}+cpu
        run: |
          pip install --upgrade pip setuptools wheel
          pip install torch==${{ matrix.torch-version}} --extra-index-url https://download.pytorch.org/whl/cpu
          pip install torch-scatter -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+cpu.html
          pip install torch-sparse -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+cpu.html
          pip install torch-cluster -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+cpu.html
      - name: Install main package
        run: |
          pip install -e .[all]
      - name: Typecheck [mypy]
        run: |
          mypy -p topomodelx
      - name: Run tests for codebase [pytest]
        if : ${{matrix.test-scope == 'codebase'}}
        run: |
          pytest --cov --cov-report=xml:coverage.xml test/nn test/base test/utils
      - name: Run tests for tutorials on simplicial domain [pytest]
        if : ${{matrix.test-scope == 'tutorials-simplicial'}}
        run: |
          pytest test/tutorials/test_simplicial.py
      - name: Run tests for tutorials on hypergraph domain [pytest]
        if : ${{matrix.test-scope == 'tutorials-hypergraph'}}
        run: |
          pytest test/tutorials/test_hypergraph.py
      - name: Run tests for tutorials on cell and combinatorial domains [pytest]
        if : ${{matrix.test-scope == 'tutorials-cell-combinatorial'}}
        run: |
          pytest test/tutorials/test_cell.py test/tutorials/test_combinatorial.py
      - name: Upload coverage
        if : ${{matrix.test-scope == 'codebase'}}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: false
